Index: src/entity/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package entity;\r\n\r\n\r\nimport main.GameHandler;\r\nimport main.ImageHandler;\r\nimport main.control.KeyHandler;\r\n\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\n\r\npublic class Player extends Entity{\r\n\r\n    KeyHandler keyH;\r\n    ImageHandler imageH = new ImageHandler();\r\n\r\n    public int screenX;\r\n    public int screenY;\r\n    int standCounter = 0;\r\n    // DEBUG\r\n    public boolean speedBoost;\r\n\r\n    public Player(GameHandler gameH, KeyHandler keyH) {\r\n\r\n        super(gameH);\r\n        this.keyH = keyH;\r\n\r\n        screenX = gameH.screenWidth/2 - (gameH.tileSize/2);\r\n        screenY = gameH.screenHeight/3 + (gameH.tileSize/2);\r\n\r\n        solidArea = new Rectangle();\r\n        solidArea.x = gameH.tileSize/2;\r\n        solidArea.y = gameH.tileSize/2;\r\n        solidAreaDefaultX = solidArea.x;\r\n        solidAreaDefaultY = solidArea.y;\r\n        solidArea.width = gameH.tileSize/3; // hitbox width\r\n        solidArea.height = gameH.tileSize/3; // hitbox height\r\n\r\n        setDefaultValues();\r\n        getPlayerImage();\r\n    }\r\n    public void setDefaultValues () {\r\n\r\n        worldX = gameH.playerPosX;\r\n        worldY = gameH.playerPosY;\r\n        speed = 4;\r\n        direction = \"down\";\r\n\r\n    }\r\n\r\n    public void getPlayerImage() {\r\n\r\n        imageH.ImageInitializer(0,\"player\",\"Skully_up_1\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        up1 = imageH.image[0];\r\n        imageH.ImageInitializer(1,\"player\",\"Skully_up_2\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        up2 = imageH.image[1];\r\n        imageH.ImageInitializer(2,\"player\",\"Skully_down_1\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        down1 = imageH.image[2];\r\n        imageH.ImageInitializer(3,\"player\",\"Skully_down_2\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        down2 = imageH.image[3];\r\n        imageH.ImageInitializer(4,\"player\",\"Skully_left_1\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        left1 = imageH.image[4];\r\n        imageH.ImageInitializer(5,\"player\",\"Skully_left_2\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        left2 = imageH.image[5];\r\n        imageH.ImageInitializer(6,\"player\",\"Skully_right_1\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        right1 = imageH.image[6];\r\n        imageH.ImageInitializer(7,\"player\",\"Skully_right_2\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        right2 = imageH.image[7];\r\n\r\n    }\r\n\r\n    public void update() {\r\n\r\n        if(keyH.wPressed == true || keyH.sPressed == true || keyH.aPressed == true || keyH.dPressed == true) {\r\n\r\n            if(keyH.wPressed == true) {\r\n                direction = \"up\";\r\n\r\n//\t\t\t\tplayerY = playerY - playerSpeed;\r\n            } else if(keyH.sPressed == true) {\r\n                direction = \"down\";\r\n\r\n            } else if(keyH.aPressed == true) {\r\n                direction = \"left\";\r\n\r\n            } else if(keyH.dPressed == true) {\r\n                direction = \"right\";\r\n\r\n            }\r\n\r\n            // CHECK TILE COLLISION\r\n            collisionOn = false;\r\n            gameH.cChecker.checkTile(this);\r\n\r\n            // CHECK OBJECT COLLISION\r\n            int objIndex = gameH.cChecker.checkObject(this, true);\r\n            pickUpObject(objIndex);\r\n\r\n            // CHECK NPC COLLISION\r\n            int npcIndex = gameH.cChecker.checkEntity(this, gameH.npc);\r\n            interactNPC(npcIndex);\r\n\r\n\r\n            // CHECK EVENT\r\n            gameH.eHandler.checkEvent();\r\n\r\n            gameH.keyH.spacePressed = false;\r\n\r\n            // IF COLLISION IS FALSE, PLAYER CAN MOVE\r\n            if(collisionOn == false) {\r\n\r\n                switch(direction) {\r\n                    case \"up\":\r\n                        worldY -= speed;\r\n                        break;\r\n                    case \"down\":\r\n                        worldY += speed;\r\n                        break;\r\n                    case \"left\":\r\n                        worldX -= speed;\r\n                        break;\r\n                    case \"right\":\r\n                        worldX += speed;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n            spriteCounter++;\r\n            if (spriteCounter > 10) {\r\n                if (spriteNum == 1) {\r\n                    spriteNum = 2;\r\n                } else if (spriteNum == 2) {\r\n                    spriteNum = 1;\r\n                }\r\n                spriteCounter = 0;\r\n            }\r\n\r\n        } else {\r\n            standCounter++;\r\n            if(standCounter == 20) {\r\n                spriteNum = 1;\r\n                standCounter = 0;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public void pickUpObject(int i) {\r\n\r\n        if(i != 999) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public void interactNPC(int i) {\r\n\r\n        if(i != 999) {\r\n\r\n            // NPC code\r\n            // ...\r\n\r\n        }\r\n    }\r\n\r\n    public void draw(Graphics2D g2) {\r\n\r\n        BufferedImage image = null;\r\n\r\n        switch (direction) {\r\n            case \"up\":\r\n                if(spriteNum == 1) {\r\n                    image = up1;\r\n                }\r\n                if(spriteNum == 2) {\r\n                    image = up2;\r\n                }\r\n                break;\r\n            case \"down\":\r\n                if(spriteNum == 1) {\r\n                    image = down1;\r\n                }\r\n                if(spriteNum == 2) {\r\n                    image = down2;\r\n                }\r\n                break;\r\n            case \"left\":\r\n                if(spriteNum == 1) {\r\n                    image = left1;\r\n                }\r\n                if(spriteNum == 2) {\r\n                    image = left2;\r\n                }\r\n                break;\r\n            case \"right\":\r\n                if(spriteNum == 1) {\r\n                    image = right1;\r\n                }\r\n                if(spriteNum == 2) {\r\n                    image = right2;\r\n                }\r\n                break;\r\n        }\r\n\r\n        g2.drawImage(image, screenX, screenY, null);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/entity/Player.java b/src/entity/Player.java
--- a/src/entity/Player.java	(revision f1805d0a0f630e0e15422a927f14129c68308192)
+++ b/src/entity/Player.java	(date 1681896135524)
@@ -99,6 +99,10 @@
             int npcIndex = gameH.cChecker.checkEntity(this, gameH.npc);
             interactNPC(npcIndex);
 
+            //CHECK NPC VISION
+            int visionIndex = gameH.cChecker.checkVision(this, gameH.npc);
+
+
 
             // CHECK EVENT
             gameH.eHandler.checkEvent();
@@ -144,6 +148,9 @@
         }
 
     }
+    public void visionNPC(int i){
+        gameH.gameState = gameH.battleState;
+    }
 
     public void pickUpObject(int i) {
 
Index: src/main/GameHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main;\r\n\r\nimport entity.Entity;\r\nimport entity.Player;\r\nimport main.control.KeyHandler;\r\nimport objects.SuperObject;\r\nimport settings.SaveCompiler;\r\nimport settings.Settings;\r\nimport tile.TileManager;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\n\r\npublic class GameHandler extends JPanel implements Runnable {\r\n    private static final long serialVersionUID = 1L;\r\n    // SCREEN SETTINGS\r\n    final int originalTileSize = 96; // 96x96 tile\r\n    final int scale = 1;\r\n\r\n    public final int tileSize = originalTileSize * scale; // 96x96 tile scale (zoom)\r\n    public final int maxScreenCol = 20;\r\n    public final int maxScreenRow = 12;\r\n    public int screenWidth = tileSize * maxScreenCol; // 96 x 20 = 1920\r\n    public int screenHeight = tileSize * maxScreenRow; // 96 x 12 = 1152 (1080++)\r\n\r\n    // WORLD SETTINGS\r\n    public final int worldColumns = 50;\r\n    public final int worldRows = 50;\r\n    public String[] availableMaps = {\r\n            \"map_test_1\", // normalWorld\r\n            \"\",           // 2Map\r\n            \"\",           // 3Map\r\n            \"arenaWorld\"  // arenaWorld\r\n    };\r\n    public String map = availableMaps[0];\r\n    public int mapType = 0;\r\n    public String[] fileIndex = {\"save_one\", \"save_two\", \"save_three\"};\r\n    public String save = fileIndex[0];\r\n    public int playerPosX;\r\n    public int playerPosY;\r\n    public boolean fullscreen;\r\n    public boolean keyboard = true;\r\n    public float musicVolume;\r\n    public float soundVolume;\r\n\r\n    // random Vars\r\n    public boolean debugMode = true;\r\n    public boolean unsavedSetting;\r\n    // FPS\r\n    int FPS = 60;\r\n\r\n    // SYSTEM\r\n    TileManager tileM = new TileManager(this, map);\r\n    public KeyHandler keyH = new KeyHandler();\r\n    Sound music = new Sound();\r\n    Sound se = new Sound();\r\n    public CollisionChecker cChecker = new CollisionChecker(this);\r\n    public AssetSetter aSetter = new AssetSetter(this);\r\n    public UI ui = new UI(this);\r\n    public EventHandler eHandler = new EventHandler(this);\r\n    Thread gameThread;\r\n    GUI myGUI;\r\n    SaveCompiler saveC = new SaveCompiler();\r\n    Settings settings = new Settings();\r\n\r\n    // ENTITY AND OBJECT\r\n    public Player player;\r\n    public SuperObject obj[] = new SuperObject[10];\r\n    public Entity npc[] = new Entity[10];\r\n\r\n    // GAME STATE\r\n    public int gameState;\r\n    public final int titleState = 0;\r\n    public final int playState = 1;\r\n    public final int pauseState = 2;\r\n    public final int dialogueState = 3;\r\n    public final int saveState = 4;\r\n    public final int settingState = 5;\r\n\r\n    public GameHandler() {\r\n\r\n        this.setPreferredSize(new Dimension(screenWidth, screenHeight));\r\n        this.setBackground(Color.black);\r\n        this.setDoubleBuffered(true);\r\n        this.addKeyListener(keyH);\r\n        this.setFocusable(true);\r\n\r\n    }\r\n\r\n    public void setupGame() {\r\n        // initializer\r\n        saveC.SaveReader(this, save);\r\n        myGUI = new GUI(fullscreen, screenWidth, screenHeight);\r\n\r\n        // open and config GUI\r\n        if (fullscreen) {\r\n            myGUI.frame.setUndecorated(true);\r\n        }\r\n        myGUI.frame.add(this);\r\n        myGUI.frame.pack();\r\n        myGUI.openWindow();\r\n\r\n        player = new Player(this, keyH);\r\n\r\n        aSetter.setObject();\r\n        aSetter.setNPC();\r\n\r\n        //playMusic(0);\r\n\r\n        gameState = titleState;\r\n\r\n    }\r\n\r\n    public void reSetupGame() {\r\n        reStartWindow();\r\n    }\r\n\r\n    public void reStartWindow() {\r\n        // close old Window\r\n        myGUI.closeWindow();\r\n        myGUI = null;\r\n\r\n        // open new Window\r\n        myGUI = new GUI(fullscreen, screenWidth, screenHeight);\r\n        if (fullscreen) {\r\n            myGUI.frame.setUndecorated(true); // remove title bar\r\n        }\r\n        myGUI.frame.add(this);\r\n        myGUI.frame.pack();\r\n        myGUI.openWindow();\r\n    }\r\n\r\n    public void startGameThread() {\r\n\r\n        gameThread = new Thread(this);\r\n        gameThread.start();\r\n\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n\r\n        double drawInterval = 1000000000 / FPS; // 0.01666666 seconds\r\n        double delta = 0;\r\n        long lastTime = System.nanoTime();\r\n        long currentTime;\r\n        long timer = 0;\r\n\r\n        while (gameThread != null) {\r\n\r\n            currentTime = System.nanoTime();\r\n\r\n            delta += (currentTime - lastTime) / drawInterval;\r\n            timer += (currentTime - lastTime);\r\n            lastTime = currentTime;\r\n\r\n            if (delta >= 1) {\r\n                // 1 UPDATE: update information such as character positions\r\n                update();\r\n\r\n                // 2 DRAW: draw the screen with the updated information\r\n                repaint();\r\n\r\n                delta--;\r\n            }\r\n\r\n            if (timer >= 1000000000) {\r\n                timer = 0;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public void update() {\r\n\r\n        // fullscreen\r\n        if (keyH.f12Pressed) {\r\n            fullscreen = !fullscreen;\r\n            reStartWindow();\r\n            player.screenX = myGUI.frame.getWidth()/2 - (tileSize/2);\r\n            player.screenY = myGUI.frame.getHeight()/2 - (tileSize/2);\r\n\r\n            keyH.f12Pressed = false;\r\n        }\r\n\r\n        if (gameState == playState) {\r\n\r\n            //NPC\r\n            npc[0].update();\r\n\r\n            // PLAYER\r\n            player.update();\r\n\r\n            if (debugMode) {\r\n\r\n            }\r\n\r\n        }\r\n        if (gameState == pauseState) {\r\n            // do-nothing\r\n        }\r\n        if (gameState == titleState) {\r\n\r\n            // SELECTION\r\n            // MOVE CURSOR\r\n            if (keyH.wPressed == true || keyH.sPressed == true || keyH.upPressed == true || keyH.downPressed == true) {\r\n\r\n                if (keyH.wPressed == true || keyH.upPressed == true) {\r\n                    switch (ui.commandNum) {\r\n\r\n                        case 0:\r\n                            ui.commandNum = 3;\r\n                            break;\r\n                        case 1:\r\n                            ui.commandNum = 0;\r\n                            break;\r\n                        case 2:\r\n                            ui.commandNum = 1;\r\n                            break;\r\n                        case 3:\r\n                            ui.commandNum = 2;\r\n                            break;\r\n\r\n                    }\r\n\r\n                    keyH.wPressed = false;\r\n                    keyH.upPressed = false;\r\n\r\n                } else if (keyH.sPressed == true || keyH.downPressed == true) {\r\n                    switch (ui.commandNum) {\r\n\r\n                        case 0:\r\n                            ui.commandNum = 1;\r\n                            break;\r\n                        case 1:\r\n                            ui.commandNum = 2;\r\n                            break;\r\n                        case 2:\r\n                            ui.commandNum = 3;\r\n                            break;\r\n                        case 3:\r\n                            ui.commandNum = 0;\r\n                            break;\r\n\r\n                    }\r\n\r\n                    keyH.sPressed = false;\r\n                    keyH.downPressed = false;\r\n                }\r\n            }\r\n            // SELECT\r\n                if (keyH.spacePressed == true || keyH.enterPressed == true) {\r\n\r\n                    switch (ui.commandNum) {\r\n\r\n                        case 0: // load game\r\n                            gameState = saveState;\r\n                            break;\r\n                        case 1: // new game\r\n                            saveC.SaveReader(this, \"save_Default\");\r\n                            gameState = playState;\r\n                            break;\r\n                        case 2: // menu\r\n                            gameState = settingState;\r\n                            break;\r\n                        case 3: // quit\r\n                            System.exit(0);\r\n                            break;\r\n                    }\r\n\r\n                    ui.commandNum = 0;\r\n                    keyH.spacePressed = false;\r\n                    keyH.enterPressed = false;\r\n            }\r\n        } // Bindings for gameState\r\n\r\n        if (gameState == settingState) {\r\n            // SELECTION\r\n            // MOVE CURSOR\r\n            if (keyH.wPressed == true || keyH.sPressed == true || keyH.upPressed == true || keyH.downPressed == true) {\r\n\r\n                switch (ui.settingScreenValue) {\r\n                    case 0:\r\n                        if (keyH.wPressed == true || keyH.upPressed == true) {\r\n                            switch (ui.commandNum) {\r\n\r\n                                case 0:\r\n                                    ui.commandNum = 3;\r\n                                    break;\r\n                                case 1:\r\n                                    ui.commandNum = 0;\r\n                                    break;\r\n                                case 2:\r\n                                    ui.commandNum = 1;\r\n                                    break;\r\n                                case 3:\r\n                                    ui.commandNum = 2;\r\n                                    break;\r\n\r\n                            }\r\n\r\n                            keyH.wPressed = false;\r\n                            keyH.upPressed = false;\r\n\r\n                        } else if (keyH.sPressed == true || keyH.downPressed == true) {\r\n                            switch (ui.commandNum) {\r\n\r\n                                case 0:\r\n                                    ui.commandNum = 1;\r\n                                    break;\r\n                                case 1:\r\n                                    ui.commandNum = 2;\r\n                                    break;\r\n                                case 2:\r\n                                    ui.commandNum = 3;\r\n                                    break;\r\n                                case 3:\r\n                                    ui.commandNum = 0;\r\n                                    break;\r\n\r\n                            }\r\n\r\n                            keyH.sPressed = false;\r\n                            keyH.downPressed = false;\r\n                        }\r\n                        break;\r\n                    case 1:\r\n                        if (keyH.wPressed == true || keyH.upPressed == true) {\r\n                            switch (ui.commandNum) {\r\n\r\n                                case 0:\r\n                                    ui.commandNum = 3;\r\n                                    break;\r\n                                case 3:\r\n                                    ui.commandNum = 0;\r\n                                    break;\r\n\r\n                            }\r\n\r\n                            keyH.wPressed = false;\r\n                            keyH.upPressed = false;\r\n\r\n                        } else if (keyH.sPressed == true || keyH.downPressed == true) {\r\n                            switch (ui.commandNum) {\r\n\r\n                                case 0:\r\n                                    ui.commandNum = 3;\r\n                                    break;\r\n                                case 3:\r\n                                    ui.commandNum = 0;\r\n                                    break;\r\n\r\n                            }\r\n\r\n                            keyH.sPressed = false;\r\n                            keyH.downPressed = false;\r\n                        }\r\n                        break;\r\n                    case 2:\r\n                        if (keyH.wPressed == true || keyH.upPressed == true) {\r\n                            switch (ui.commandNum) {\r\n\r\n                                case 0:\r\n                                    ui.commandNum = 2;\r\n                                    break;\r\n                                case 1:\r\n                                    ui.commandNum = 0;\r\n                                    break;\r\n                                case 2:\r\n                                    ui.commandNum = 1;\r\n                                    break;\r\n\r\n                            }\r\n\r\n                            keyH.wPressed = false;\r\n                            keyH.upPressed = false;\r\n\r\n                        } else if (keyH.sPressed == true || keyH.downPressed == true) {\r\n                            switch (ui.commandNum) {\r\n\r\n                                case 0:\r\n                                    ui.commandNum = 1;\r\n                                    break;\r\n                                case 1:\r\n                                    ui.commandNum = 2;\r\n                                    break;\r\n                                case 2:\r\n                                    ui.commandNum = 0;\r\n                                    break;\r\n\r\n                            }\r\n\r\n                            keyH.sPressed = false;\r\n                            keyH.downPressed = false;\r\n                        }\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n            switch (ui.settingScreenValue) {\r\n                case 0:\r\n                    // SELECT\r\n                    if (keyH.spacePressed == true || keyH.enterPressed == true) {\r\n                        switch (ui.commandNum) {\r\n                            case 0: // Video\r\n                                ui.settingScreenValue = 1;\r\n                                ui.commandNum = 0;\r\n                                break;\r\n                            case 1: // Music\r\n                                ui.settingScreenValue = 2;\r\n                                ui.commandNum = 0;\r\n                                break;\r\n                            case 2: // Controller / Keyboard\r\n                                keyboard = !keyboard;\r\n                                unsavedSetting = true;\r\n                                break;\r\n                            case 3:\r\n                                gameState = titleState;\r\n                                ui.commandNum = 0;\r\n                                unsavedSetting = false;\r\n                                settings.installSettings(this, fullscreen, myGUI.frame.getWidth(), myGUI.frame.getHeight(), player.worldX, player.worldY, keyboard, musicVolume, soundVolume);\r\n                                saveC.SaveWriter(this,save);\r\n                                break;\r\n                        }\r\n\r\n                        keyH.spacePressed = false;\r\n                        keyH.enterPressed = false;\r\n                    }\r\n\r\n                    if (keyH.leftPressed == true || keyH.rightPressed == true || keyH.aPressed == true || keyH.dPressed == true) {\r\n                        if (ui.commandNum == 2) {\r\n                            unsavedSetting = true;\r\n                            keyboard = !keyboard;\r\n                        }\r\n\r\n                        keyH.aPressed = false;\r\n                        keyH.dPressed = false;\r\n                        keyH.leftPressed = false;\r\n                        keyH.rightPressed = false;\r\n                    }\r\n                    break;\r\n                case 1: // Video\r\n                    if (keyH.spacePressed == true || keyH.enterPressed == true) {\r\n                        switch (ui.commandNum) {\r\n                            case 0: // fullscreen\r\n                                fullscreen = !fullscreen;\r\n                                reStartWindow();\r\n                                unsavedSetting = true;\r\n                                break;\r\n                            case 1: // empty\r\n                                break;\r\n                            case 2: // empty\r\n                                break;\r\n                            case 3:\r\n                                ui.settingScreenValue = 0;\r\n                                break;\r\n                        }\r\n\r\n                        ui.commandNum = 0;\r\n                        keyH.spacePressed = false;\r\n                        keyH.enterPressed = false;\r\n                    }\r\n                    break;\r\n                case 2: // Sound\r\n                    if (keyH.spacePressed == true || keyH.enterPressed == true) {\r\n                        switch (ui.commandNum) {\r\n                            case 0: // musicVolume\r\n                                break;\r\n                            case 1: // soundVolume\r\n                                break;\r\n                            case 2: // back\r\n                                ui.settingScreenValue = 0;\r\n                                break;\r\n                        }\r\n\r\n                        ui.commandNum = 0;\r\n                        keyH.spacePressed = false;\r\n                        keyH.enterPressed = false;\r\n                    }\r\n\r\n                    if (keyH.leftPressed == true || keyH.rightPressed == true || keyH.aPressed == true || keyH.dPressed == true) {\r\n                        switch (ui.commandNum) {\r\n                            case 0:\r\n                                if ((keyH.aPressed == true || keyH.leftPressed == true) && musicVolume > 0f) {\r\n                                    musicVolume = musicVolume - 0.1f;\r\n                                } else if ((keyH.dPressed == true || keyH.rightPressed == true) && musicVolume < 2f) {\r\n                                    musicVolume = musicVolume + 0.1f;\r\n                                }\r\n                                break;\r\n                            case 1:\r\n                                if ((keyH.aPressed == true || keyH.leftPressed == true) && soundVolume > 0f) {\r\n                                    soundVolume = soundVolume - 0.1f;\r\n                                } else if ((keyH.dPressed == true || keyH.rightPressed == true) && soundVolume < 2f) {\r\n                                    soundVolume = soundVolume + 0.1f;\r\n                                }\r\n                                break;\r\n                        }\r\n\r\n                        unsavedSetting = true;\r\n                        keyH.leftPressed = false;\r\n                        keyH.rightPressed = false;\r\n                    }\r\n                    break;\r\n\r\n            }\r\n        }\r\n\r\n        if (gameState == saveState) {\r\n            // SELECTION\r\n            // MOVE CURSOR\r\n            if (keyH.wPressed == true || keyH.sPressed == true || keyH.upPressed == true || keyH.downPressed == true) {\r\n\r\n                if (keyH.wPressed == true || keyH.upPressed == true) {\r\n                    switch (ui.commandNum) {\r\n\r\n                        case 0:\r\n                            ui.commandNum = 3;\r\n                            break;\r\n                        case 1:\r\n                            ui.commandNum = 0;\r\n                            break;\r\n                        case 2:\r\n                            ui.commandNum = 1;\r\n                            break;\r\n                        case 3:\r\n                            ui.commandNum = 2;\r\n                            break;\r\n\r\n                    }\r\n\r\n                    keyH.wPressed = false;\r\n                    keyH.upPressed = false;\r\n\r\n                } else if (keyH.sPressed == true || keyH.downPressed == true) {\r\n                    switch (ui.commandNum) {\r\n\r\n                        case 0:\r\n                            ui.commandNum = 1;\r\n                            break;\r\n                        case 1:\r\n                            ui.commandNum = 2;\r\n                            break;\r\n                        case 2:\r\n                            ui.commandNum = 3;\r\n                            break;\r\n                        case 3:\r\n                            ui.commandNum = 0;\r\n                            break;\r\n                    }\r\n\r\n                    keyH.sPressed = false;\r\n                    keyH.downPressed = false;\r\n                }\r\n            }\r\n            // SELECT\r\n            if (keyH.spacePressed == true || keyH.enterPressed == true) {\r\n\r\n                switch (ui.commandNum) {\r\n\r\n                    case 0: // save_one\r\n                        save = fileIndex[0];\r\n                        unsavedSetting = true;\r\n                        break;\r\n                    case 1: // save_two\r\n                        save = fileIndex[1];\r\n                        unsavedSetting = true;\r\n                        break;\r\n                    case 2: // save_three\r\n                        save = fileIndex[2];\r\n                        unsavedSetting = true;\r\n                        break;\r\n                    case 3: // back\r\n                        if (unsavedSetting) {\r\n                            unsavedSetting = false;\r\n                            saveC.SaveReader(this, save);\r\n                            reStartWindow();\r\n                        }\r\n                        gameState = titleState;\r\n                        ui.commandNum = 0;\r\n                        break;\r\n                }\r\n\r\n                keyH.spacePressed = false;\r\n                keyH.enterPressed = false;\r\n            }\r\n        } // Bindings for gameState\r\n    }\r\n    public void paintComponent(Graphics g) {\r\n        super.paintComponent(g);\r\n\r\n        Graphics2D g2 = (Graphics2D)g;\r\n\r\n        // TITLE SCREEN\r\n        if (gameState == titleState || gameState == settingState) {\r\n            ui.draw(g2);\r\n        }\r\n\r\n        // OTHERS\r\n        else {\r\n            // TILE\r\n            tileM.draw(g2);\r\n\r\n            // OBJECT\r\n            for(int i = 0; i < obj.length; i++) {\r\n                if(obj[i] != null) {\r\n                    obj[i].draw(g2, this);\r\n                }\r\n            }\r\n\r\n            //NPC\r\n            for(int i = 0; i<npc.length; i++){\r\n                if(npc[i] != null){\r\n                    npc[i].draw(g2);\r\n                }\r\n            }\r\n            // PLAYER\r\n            player.draw(g2);\r\n\r\n            // UI\r\n            ui.draw(g2);\r\n        }\r\n\r\n        g2.dispose();\r\n    }\r\n\r\n    public void playMusic(int i) {\r\n\r\n        music.setFile(i);\r\n        music.play();\r\n        music.loop();\r\n\r\n    }\r\n\r\n    public void stopMusic() {\r\n\r\n        music.stop();\r\n\r\n    }\r\n\r\n    public void playSE(int i) {\r\n\r\n        se.setFile(i);\r\n        se.play();\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/GameHandler.java b/src/main/GameHandler.java
--- a/src/main/GameHandler.java	(revision f1805d0a0f630e0e15422a927f14129c68308192)
+++ b/src/main/GameHandler.java	(date 1681733024283)
@@ -76,6 +76,7 @@
     public final int dialogueState = 3;
     public final int saveState = 4;
     public final int settingState = 5;
+    public final int battleState = 6;
 
     public GameHandler() {
 
Index: src/entity/NPCTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package entity;\r\n\r\n\r\nimport main.GameHandler;\r\nimport main.ImageHandler;\r\n\r\n\r\npublic class NPCTest extends Entity{\r\n    ImageHandler imageH = new ImageHandler();\r\n\r\n  public  NPCTest(GameHandler gameH){\r\n      super(gameH);\r\n\r\n      direction = \"right\";\r\n      speed = 10;\r\n\r\n      getTestNPCImage();\r\n  }\r\n\r\n    public void getTestNPCImage() {\r\n        imageH.ImageInitializer(0,\"NPC\",\"uparrow\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        up1 = imageH.image[0];\r\n        imageH.ImageInitializer(1,\"NPC\",\"uparrow2\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        up2 = imageH.image[1];\r\n        imageH.ImageInitializer(2,\"NPC\",\"downarrow\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        down1 = imageH.image[2];\r\n        imageH.ImageInitializer(3,\"NPC\",\"downarrow2\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        down2 = imageH.image[3];\r\n        imageH.ImageInitializer(4,\"NPC\",\"leftarrow\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        left1 = imageH.image[4];\r\n        imageH.ImageInitializer(5,\"NPC\",\"leftarrow2\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        left2 = imageH.image[5];\r\n        imageH.ImageInitializer(6,\"NPC\",\"rightarrow\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        right1 = imageH.image[6];\r\n        imageH.ImageInitializer(7,\"NPC\",\"rightarrow2\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        right2 = imageH.image[7];\r\n    }\r\n    public void setAction(){\r\n      if(gameH.npc[0].worldX > gameH.tileSize*24){\r\n            direction = \"left\";\r\n      }\r\n      else if(gameH.npc[0].worldX <gameH.tileSize*12){\r\n          direction = \"right\";\r\n      }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/entity/NPCTest.java b/src/entity/NPCTest.java
--- a/src/entity/NPCTest.java	(revision f1805d0a0f630e0e15422a927f14129c68308192)
+++ b/src/entity/NPCTest.java	(date 1681733463588)
@@ -12,7 +12,7 @@
       super(gameH);
 
       direction = "right";
-      speed = 10;
+      speed = 1;
 
       getTestNPCImage();
   }
Index: src/main/CollisionChecker.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main;\r\n\r\nimport entity.Entity;\r\n\r\npublic class CollisionChecker {\r\n\r\n    GameHandler gameH;\r\n\r\n    public CollisionChecker(GameHandler gameH) {\r\n        this.gameH = gameH;\r\n    }\r\n\r\n    public void checkTile(Entity entity) {\r\n\r\n        int entityLeftWorldX = entity.worldX + entity.solidArea.x;\r\n        int entityRightWorldX = entity.worldX + entity.solidArea.x + entity.solidArea.width;\r\n        int entityTopWorldY = entity.worldY + entity.solidArea.y;\r\n        int entityBottomWorldY = entity.worldY + entity.solidArea.y + entity.solidArea.height;\r\n\r\n        int entityLeftCol = entityLeftWorldX/gameH.tileSize;\r\n        int entityRightCol = entityRightWorldX/gameH.tileSize;\r\n        int entityTopRow = entityTopWorldY/gameH.tileSize;\r\n        int entityBottomRow = entityBottomWorldY/gameH.tileSize;\r\n\r\n        int tileNum1, tileNum2;\r\n\r\n        switch(entity.direction) {\r\n            case \"up\":\r\n                entityTopRow = (entityTopWorldY - entity.speed)/gameH.tileSize;\r\n                tileNum1 = gameH.tileM.mapTileNum[entityLeftCol][entityTopRow];\r\n                tileNum2 = gameH.tileM.mapTileNum[entityRightCol][entityTopRow];\r\n\r\n                if (gameH.tileM.tile[tileNum1].collision == true || gameH.tileM.tile[tileNum2].collision == true) {\r\n                    entity.collisionOn = true;\r\n                }\r\n\r\n                break;\r\n            case \"down\":\r\n                entityBottomRow = (entityBottomWorldY + entity.speed)/gameH.tileSize;\r\n                tileNum1 = gameH.tileM.mapTileNum[entityLeftCol][entityBottomRow];\r\n                tileNum2 = gameH.tileM.mapTileNum[entityRightCol][entityBottomRow];\r\n\r\n                if (gameH.tileM.tile[tileNum1].collision == true || gameH.tileM.tile[tileNum2].collision == true) {\r\n                    entity.collisionOn = true;\r\n                }\r\n\r\n                break;\r\n            case \"left\":\r\n                entityLeftCol = (entityLeftWorldX - entity.speed)/gameH.tileSize;\r\n                tileNum1 = gameH.tileM.mapTileNum[entityLeftCol][entityTopRow];\r\n                tileNum2 = gameH.tileM.mapTileNum[entityLeftCol][entityBottomRow];\r\n\r\n                if (gameH.tileM.tile[tileNum1].collision == true || gameH.tileM.tile[tileNum2].collision == true) {\r\n                    entity.collisionOn = true;\r\n                }\r\n\r\n                break;\r\n            case \"right\":\r\n                entityRightCol = (entityRightWorldX + entity.speed)/gameH.tileSize;\r\n                tileNum1 = gameH.tileM.mapTileNum[entityRightCol][entityTopRow];\r\n                tileNum2 = gameH.tileM.mapTileNum[entityRightCol][entityBottomRow];\r\n\r\n                if (gameH.tileM.tile[tileNum1].collision == true || gameH.tileM.tile[tileNum2].collision == true) {\r\n                    entity.collisionOn = true;\r\n                }\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    public int checkObject(Entity entity, boolean player) {\r\n\r\n        int index = 999;\r\n\r\n        for(int i = 0; i < gameH.obj.length; i++) {\r\n\r\n            if(gameH.obj[i] != null) {\r\n\r\n                // Get entity's solid area position\r\n                entity.solidArea.x = entity.worldX + entity.solidArea.x;\r\n                entity.solidArea.y = entity.worldY + entity.solidArea.y;\r\n\r\n                // Get the object's solid area position\r\n                gameH.obj[i].solidArea.x = gameH.obj[i].worldX + gameH.obj[i].solidArea.x;\r\n                gameH.obj[i].solidArea.y = gameH.obj[i].worldY + gameH.obj[i].solidArea.y;\r\n\r\n                switch(entity.direction) {\r\n                    case \"up\":\r\n                        entity.solidArea.y -= entity.speed;\r\n                        if(entity.solidArea.intersects(gameH.obj[i].solidArea)) {\r\n                            if(gameH.obj[i].collision == true) {\r\n                                entity.collisionOn = true;\r\n                            }\r\n                            if(player == true) {\r\n                                index = i;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"down\":\r\n                        entity.solidArea.y += entity.speed;\r\n                        if(entity.solidArea.intersects(gameH.obj[i].solidArea)) {\r\n                            if(gameH.obj[i].collision == true) {\r\n                                entity.collisionOn = true;\r\n                            }\r\n                            if(player == true) {\r\n                                index = i;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"left\":\r\n                        entity.solidArea.x -= entity.speed;\r\n                        if(entity.solidArea.intersects(gameH.obj[i].solidArea)) {\r\n                            if(gameH.obj[i].collision == true) {\r\n                                entity.collisionOn = true;\r\n                            }\r\n                            if(player == true) {\r\n                                index = i;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"right\":\r\n                        entity.solidArea.x += entity.speed;\r\n                        if(entity.solidArea.intersects(gameH.obj[i].solidArea)) {\r\n                            if(gameH.obj[i].collision == true) {\r\n                                entity.collisionOn = true;\r\n                            }\r\n                            if(player == true) {\r\n                                index = i;\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n                entity.solidArea.x = entity.solidAreaDefaultX;\r\n                entity.solidArea.y = entity.solidAreaDefaultY;\r\n                gameH.obj[i].solidArea.x = gameH.obj[i].solidAreaDefaultX;\r\n                gameH.obj[i].solidArea.y = gameH.obj[i].solidAreaDefaultY;\r\n            }\r\n\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    // NPC OR MONSTER\r\n    public int checkEntity(Entity entity, Entity[] target) {\r\n\r\n        int index = 999;\r\n\r\n        for(int i = 0; i < target.length; i++) {\r\n\r\n            if(target[i] != null) {\r\n\r\n                // Get entity's solid area position\r\n                entity.solidArea.x = entity.worldX + entity.solidArea.x;\r\n                entity.solidArea.y = entity.worldY + entity.solidArea.y;\r\n\r\n                // Get the object's solid area position\r\n                target[i].solidArea.x = target[i].worldX + target[i].solidArea.x;\r\n                target[i].solidArea.y = target[i].worldY + target[i].solidArea.y;\r\n\r\n                switch(entity.direction) {\r\n                    case \"up\":\r\n                        entity.solidArea.y -= entity.speed;\r\n                        if(entity.solidArea.intersects(target[i].solidArea)) {\r\n                            entity.collisionOn = true;\r\n                            index = i;\r\n                        }\r\n                        break;\r\n                    case \"down\":\r\n                        entity.solidArea.y += entity.speed;\r\n                        if(entity.solidArea.intersects(target[i].solidArea)) {\r\n                            entity.collisionOn = true;\r\n                            index = i;\r\n                        }\r\n                        break;\r\n                    case \"left\":\r\n                        entity.solidArea.x -= entity.speed;\r\n                        if(entity.solidArea.intersects(target[i].solidArea)) {\r\n                            entity.collisionOn = true;\r\n                            index = i;\r\n                        }\r\n                        break;\r\n                    case \"right\":\r\n                        entity.solidArea.x += entity.speed;\r\n                        if(entity.solidArea.intersects(target[i].solidArea)) {\r\n                            entity.collisionOn = true;\r\n                            index = i;\r\n                        }\r\n                        break;\r\n                }\r\n                entity.solidArea.x = entity.solidAreaDefaultX;\r\n                entity.solidArea.y = entity.solidAreaDefaultY;\r\n                target[i].solidArea.x = target[i].solidAreaDefaultX;\r\n                target[i].solidArea.y = target[i].solidAreaDefaultY;\r\n            }\r\n\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    public void checkPlayer(Entity entity) {\r\n\r\n        // Get entity's solid area position\r\n        entity.solidArea.x = entity.worldX + entity.solidArea.x;\r\n        entity.solidArea.y = entity.worldY + entity.solidArea.y;\r\n\r\n        // Get the object's solid area position\r\n        gameH.player.solidArea.x = gameH.player.worldX + gameH.player.solidArea.x;\r\n        gameH.player.solidArea.y = gameH.player.worldY + gameH.player.solidArea.y;\r\n\r\n        switch(entity.direction) {\r\n            case \"up\":\r\n                entity.solidArea.y -= entity.speed;\r\n                if(entity.solidArea.intersects(gameH.player.solidArea)) {\r\n                    entity.collisionOn = true;\r\n                }\r\n                break;\r\n            case \"down\":\r\n                entity.solidArea.y += entity.speed;\r\n                if(entity.solidArea.intersects(gameH.player.solidArea)) {\r\n                    entity.collisionOn = true;\r\n                }\r\n                break;\r\n            case \"left\":\r\n                entity.solidArea.x -= entity.speed;\r\n                if(entity.solidArea.intersects(gameH.player.solidArea)) {\r\n                    entity.collisionOn = true;\r\n                }\r\n                break;\r\n            case \"right\":\r\n                entity.solidArea.x += entity.speed;\r\n                if(entity.solidArea.intersects(gameH.player.solidArea)) {\r\n                    entity.collisionOn = true;\r\n                }\r\n                break;\r\n        }\r\n\r\n        entity.solidArea.x = entity.solidAreaDefaultX;\r\n        entity.solidArea.y = entity.solidAreaDefaultY;\r\n        gameH.player.solidArea.x = gameH.player.solidAreaDefaultX;\r\n        gameH.player.solidArea.y = gameH.player.solidAreaDefaultY;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/CollisionChecker.java b/src/main/CollisionChecker.java
--- a/src/main/CollisionChecker.java	(revision f1805d0a0f630e0e15422a927f14129c68308192)
+++ b/src/main/CollisionChecker.java	(date 1681896135548)
@@ -158,7 +158,7 @@
                 target[i].solidArea.x = target[i].worldX + target[i].solidArea.x;
                 target[i].solidArea.y = target[i].worldY + target[i].solidArea.y;
 
-                switch(entity.direction) {
+                 switch(entity.direction) {
                     case "up":
                         entity.solidArea.y -= entity.speed;
                         if(entity.solidArea.intersects(target[i].solidArea)) {
@@ -241,5 +241,62 @@
         gameH.player.solidArea.x = gameH.player.solidAreaDefaultX;
         gameH.player.solidArea.y = gameH.player.solidAreaDefaultY;
     }
+    public int checkVision(Entity entity, Entity[] target){
+
+        int index = 999;
+
+        for(int i = 0; i < target.length; i++) {
+
+            if(target[i] != null) {
+
+                // Get entity's solid area position
+                entity.solidArea.x = entity.worldX + entity.solidArea.x;
+                entity.solidArea.y = entity.worldY + entity.solidArea.y;
+
+                // Get the object's solid area position
+                target[i].solidArea.x = target[i].worldX + target[i].solidArea.x;
+                target[i].solidArea.y = target[i].worldY + target[i].solidArea.y;
+
+                switch(entity.direction) {
+                    case "up":
+                        entity.solidArea.y -= entity.speed;
+                        if(entity.solidArea.intersects(target[i].solidArea)) {
+                            entity.collisionOn = true;
+                            index = i;
+                        }
+                        break;
+                    case "down":
+                        entity.solidArea.y += entity.speed;
+                        if(entity.solidArea.intersects(target[i].solidArea)) {
+                            entity.collisionOn = true;
+                            index = i;
+                        }
+                        break;
+                    case "left":
+                        entity.solidArea.x -= entity.speed;
+                        if(entity.solidArea.intersects(target[i].solidArea)) {
+                            entity.collisionOn = true;
+
+                            index = i;
+                        }
+                        break;
+                    case "right":
+                        entity.solidArea.x += entity.speed;
+                        if(entity.solidArea.intersects(target[i].solidArea)) {
+                            entity.collisionOn = true;
+                            index = i;
+                        }
+                        break;
+                }
+                entity.solidArea.x = entity.solidAreaDefaultX;
+                entity.solidArea.y = entity.solidAreaDefaultY;
+                target[i].solidArea.x = target[i].solidAreaDefaultX;
+                target[i].solidArea.y = target[i].solidAreaDefaultY;
+            }
+
+        }
+
+        return index;
+    }
 
 }
\ No newline at end of file
Index: src/main/UI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main;\r\n\r\nimport java.awt.*;\r\n\r\npublic class UI {\r\n    GameHandler gameH;\r\n    Graphics2D g2;\r\n    Font arial_40, arial_80B;\r\n    public boolean messageOn = false;\r\n    public String message = \"\";\r\n    public String currentDialogue = \"\";\r\n    public int textPos = 0;\r\n    public int commandNum = 0;\r\n    public int settingScreenValue = 0;\r\n    public Color backgroundColor = new Color(47, 45, 45);\r\n\r\n    // METHODS\r\n    public UI(GameHandler gameH) {\r\n\r\n        this.gameH = gameH;\r\n\r\n        arial_40 = new Font(\"Arial\", Font.PLAIN, 40);\r\n        arial_80B = new Font(\"Arial\", Font.BOLD, 80);\r\n\r\n        // CREATE HUD OBJECT\r\n\r\n    }\r\n    public void showMessage(String text) {\r\n\r\n        message = text;\r\n        messageOn = true;\r\n\r\n    }\r\n    public void draw(Graphics2D g2) {\r\n\r\n        this.g2 = g2;\r\n\r\n        g2.setFont(arial_40);\r\n        g2.setColor(Color.white);\r\n\r\n        // TITLE STATE\r\n        if (gameH.gameState == gameH.titleState) {\r\n            drawTitleScreen();\r\n        }\r\n\r\n        // PLAY STATE\r\n        if (gameH.gameState == gameH.playState) {\r\n\r\n        }\r\n\r\n        // PAUSE STATE\r\n        if (gameH.gameState == gameH.pauseState) {\r\n            drawPauseScreen();\r\n        }\r\n\r\n        // DIALOGUE STATE\r\n        if (gameH.gameState == gameH.dialogueState) {\r\n            drawDialogueScreen();\r\n        }\r\n\r\n        // SETTING STATE\r\n        if (gameH.gameState == gameH.settingState) {\r\n            drawSettingScreen();\r\n        }\r\n\r\n        // SAVE STATE\r\n        if (gameH.gameState == gameH.saveState) {\r\n            drawSaveScreen();\r\n        }\r\n    }\r\n    public void drawTitleScreen() {\r\n\r\n        g2.setColor(backgroundColor);\r\n        g2.fillRect(0, 0, gameH.myGUI.frame.getWidth(), gameH.myGUI.frame.getHeight());\r\n\r\n        String text;\r\n        int x = 0;\r\n        int y = 0;\r\n\r\n        // TITLE IMAGE\r\n        x = gameH.myGUI.frame.getWidth()/2 - (gameH.myGUI.frame.getWidth()/3)/2;\r\n        y += gameH.myGUI.frame.getHeight()/16;\r\n        g2.drawImage(gameH.tileM.tile[0].image, x, y, gameH.myGUI.frame.getWidth()/3, (gameH.myGUI.frame.getWidth()/3)/3, null);\r\n\r\n        // Font Color\r\n        g2.setColor(Color.white);\r\n\r\n        // MENU\r\n        int texts = 4;\r\n        double fontValue = ((gameH.myGUI.frame.getHeight() / 2)-((texts+1)*(gameH.myGUI.frame.getHeight()/25)))/texts; // How big the Font is compared to the Screen\r\n        float fontSize = Float.parseFloat(String.valueOf(fontValue));\r\n        g2.setFont(g2.getFont().deriveFont(Font.BOLD, fontSize));\r\n        text = \"LOAD GAME\";\r\n        textPos = 0;\r\n        x = getXforCenteredText(text);\r\n//      y = (gameH.myGUI.frame.getHeight()/16) + (gameH.myGUI.frame.getWidth()/3)/3 + (gameH.myGUI.frame.getHeight()/8); // first Label under the Image\r\n        y = gameH.myGUI.frame.getHeight()/2 + gameH.myGUI.frame.getHeight()/25; // middle of the Screen\r\n        g2.drawString(text, x, y);\r\n        if(commandNum == textPos) {\r\n            g2.drawString(\">\", x-gameH.tileSize, y);\r\n        }\r\n\r\n        y += getYforText(text) + (gameH.myGUI.frame.getHeight()/60);\r\n        text = \"NEW GAME\";\r\n        textPos = 1;\r\n        x = getXforCenteredText(text);\r\n        g2.drawString(text, x, y);\r\n        if(commandNum == textPos) {\r\n            g2.drawString(\">\", x-gameH.tileSize, y);\r\n        }\r\n\r\n        y += getYforText(text) + (gameH.myGUI.frame.getHeight()/60);\r\n        text = \"MENU\";\r\n        textPos = 2;\r\n        x = getXforCenteredText(text);\r\n        g2.drawString(text, x, y);\r\n        if(commandNum == textPos) {\r\n            g2.drawString(\">\", x-gameH.tileSize, y);\r\n        }\r\n\r\n        y += getYforText(text) + (gameH.myGUI.frame.getHeight()/60);\r\n        text = \"QUIT\";\r\n        textPos = 3;\r\n        x = getXforCenteredText(text);\r\n        g2.drawString(text, x, y);\r\n        if(commandNum == textPos) {\r\n            g2.drawString(\">\", (int) (x - fontValue), y);\r\n        }\r\n\r\n    }\r\n    public void drawPauseScreen() {\r\n\r\n        g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 80F));\r\n        String text = \"PAUSED\";\r\n        int x = getXforCenteredText(text);\r\n        int y = gameH.screenHeight/16;\r\n\r\n        g2.drawString(text, x, y);\r\n\r\n    }\r\n    public void drawSettingScreen() {\r\n\r\n        g2.setColor(backgroundColor);\r\n        g2.fillRect(0, 0, gameH.myGUI.frame.getWidth(), gameH.myGUI.frame.getHeight());\r\n\r\n        String text;\r\n        int x = 0;\r\n        int y = 0;\r\n\r\n        // set Color\r\n        g2.setColor(Color.white);\r\n\r\n        if (settingScreenValue == 0) {\r\n            // Title\r\n            g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 100F));\r\n            text = \"SETTINGS\";\r\n            x = getXforCenteredText(text);\r\n            y = gameH.myGUI.frame.getHeight()/5;\r\n\r\n            g2.drawString(text, x, y);\r\n\r\n            // MENU\r\n            int texts = 4;\r\n            double fontValue = ((gameH.myGUI.frame.getHeight() / 2)-((texts+1)*(gameH.myGUI.frame.getHeight()/25)))/texts; // How big the Font is compared to the Screen\r\n            float fontSize = Float.parseFloat(String.valueOf(fontValue));\r\n            g2.setFont(g2.getFont().deriveFont(Font.BOLD, fontSize));\r\n            text = \"VIDEO\";\r\n            textPos = 0;\r\n            x = getXforCenteredText(text);\r\n            y = gameH.myGUI.frame.getHeight()/2 + gameH.myGUI.frame.getHeight()/25; // middle of the Screen\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == textPos) {\r\n                g2.drawString(\">\", x-gameH.tileSize, y);\r\n            }\r\n\r\n            y += getYforText(text) + (gameH.myGUI.frame.getHeight()/60);\r\n            text = \"SOUND\";\r\n            textPos = 1;\r\n            x = getXforCenteredText(text);\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == textPos) {\r\n                g2.drawString(\">\", x-gameH.tileSize, y);\r\n            }\r\n\r\n            y += getYforText(text) + (gameH.myGUI.frame.getHeight()/60);\r\n            textPos = 2;\r\n\r\n            if (gameH.keyboard == true) {\r\n                g2.setColor(new Color(38, 222, 17));\r\n                text = \"KEYBOARD\";\r\n                x = getXforCenteredText(text);\r\n                g2.drawString(text, x, y);\r\n                g2.setColor(Color.white);\r\n                if(commandNum == textPos) {\r\n                    g2.drawString(\"<\", x - (gameH.myGUI.frame.getWidth()/15), y);\r\n                    if (gameH.fullscreen) {\r\n                        g2.drawString(\">\", x + (gameH.myGUI.frame.getWidth()/4) + (gameH.myGUI.frame.getWidth()/32), y);\r\n                    } else {\r\n                        g2.drawString(\">\", x + (gameH.myGUI.frame.getWidth()/4), y);\r\n                    }\r\n\r\n                }\r\n            } else {\r\n                g2.setColor(new Color(222, 17, 17));\r\n                text = \"CONTROLLER\";\r\n                x = getXforCenteredText(text);\r\n                g2.drawString(text, x, y);\r\n                g2.setColor(Color.white);\r\n                if(commandNum == textPos) {\r\n                    g2.drawString(\"<\", x - (gameH.myGUI.frame.getWidth()/15), y);\r\n                    if (gameH.fullscreen) {\r\n                        g2.drawString(\">\", x + (gameH.myGUI.frame.getWidth()/4) + (gameH.myGUI.frame.getWidth()/12), y);\r\n                    } else {\r\n                        g2.drawString(\">\", x + (gameH.myGUI.frame.getWidth()/4) + (gameH.myGUI.frame.getWidth()/20), y);\r\n                    }\r\n                }\r\n            }\r\n\r\n            g2.setColor(Color.white);\r\n\r\n            y += getYforText(text) + (gameH.myGUI.frame.getHeight()/60);\r\n            if (gameH.unsavedSetting) {\r\n                g2.setColor(Color.red);\r\n                text = \"SAVE AND BACK\";\r\n            } else {\r\n                g2.setColor(Color.white);\r\n                text = \"BACK\";\r\n            }\r\n            textPos = 3;\r\n            x = getXforCenteredText(text);\r\n            g2.drawString(text, x, y);\r\n            g2.setColor(Color.white);\r\n            if(commandNum == textPos) {\r\n                g2.drawString(\">\", x-gameH.tileSize, y);\r\n            }\r\n        } else if (settingScreenValue == 1) {\r\n            // Title\r\n            g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 100F));\r\n            text = \"VIDEO\";\r\n            x = getXforCenteredText(text);\r\n            y = gameH.myGUI.frame.getHeight()/5;\r\n\r\n            g2.drawString(text, x, y);\r\n\r\n            // MENU\r\n            int texts = 4;\r\n            double fontValue = ((gameH.myGUI.frame.getHeight() / 2)-((texts+1)*(gameH.myGUI.frame.getHeight()/25)))/texts; // How big the Font is compared to the Screen\r\n            float fontSize = Float.parseFloat(String.valueOf(fontValue));\r\n            g2.setFont(g2.getFont().deriveFont(Font.BOLD, fontSize));\r\n            text = \"FULLSCREEN: \";\r\n            textPos = 0;\r\n            x = getXforCenteredText(text);\r\n            y = gameH.myGUI.frame.getHeight()/2 + gameH.myGUI.frame.getHeight()/25; // middle of the Screen\r\n\r\n            if (gameH.fullscreen) {\r\n                g2.drawString(\"ON\",  x + (gameH.myGUI.frame.getWidth()/4) + (gameH.myGUI.frame.getWidth()/16), y);\r\n            } else {\r\n                g2.drawString(\"OFF\", x + (gameH.myGUI.frame.getWidth()/4) + (gameH.myGUI.frame.getWidth()/32), y);\r\n            }\r\n\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == textPos) {\r\n                g2.drawString(\">\", x-gameH.tileSize, y);\r\n            }\r\n\r\n            y += getYforText(text) + (gameH.myGUI.frame.getHeight()/60);\r\n            text = \"\";\r\n            textPos = 1;\r\n            x = getXforCenteredText(text);\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == textPos) {\r\n                g2.drawString(\">\", x-gameH.tileSize, y);\r\n            }\r\n\r\n            y += getYforText(text) + (gameH.myGUI.frame.getHeight()/60);\r\n            text = \"\";\r\n            textPos = 2;\r\n            x = getXforCenteredText(text);\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == textPos) {\r\n                g2.drawString(\">\", x-gameH.tileSize, y);\r\n            }\r\n\r\n            y += getYforText(text) + (gameH.myGUI.frame.getHeight()/60);\r\n            text = \"BACK\";\r\n            textPos = 3;\r\n            x = getXforCenteredText(text);\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == textPos) {\r\n                g2.drawString(\">\", x-gameH.tileSize, y);\r\n            }\r\n        } else if (settingScreenValue == 2) {\r\n            // Title\r\n            g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 100F));\r\n            text = \"VIDEO\";\r\n            x = getXforCenteredText(text);\r\n            y = gameH.myGUI.frame.getHeight()/5;\r\n\r\n            g2.drawString(text, x, y);\r\n\r\n            // MENU\r\n            int texts = 4;\r\n            double fontValue = ((gameH.myGUI.frame.getHeight() / 2)-((texts+1)*(gameH.myGUI.frame.getHeight()/25)))/texts; // How big the Font is compared to the Screen\r\n            float fontSize = Float.parseFloat(String.valueOf(fontValue));\r\n            g2.setFont(g2.getFont().deriveFont(Font.BOLD, fontSize));\r\n            text = \"Music Volume:\";\r\n            textPos = 0;\r\n            x = getXforCenteredText(text);\r\n            y = gameH.myGUI.frame.getHeight()/3 + gameH.myGUI.frame.getHeight()/25; // middle of the Screen\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == textPos) {\r\n                g2.drawString(\"<\", x - (gameH.myGUI.frame.getWidth()/15), y);\r\n                if (gameH.fullscreen) {\r\n                    g2.drawString(\">\", x + (gameH.myGUI.frame.getWidth()/4) + (gameH.myGUI.frame.getWidth()/12), y);\r\n                } else {\r\n                    g2.drawString(\">\", x + (gameH.myGUI.frame.getWidth()/4) + (gameH.myGUI.frame.getWidth()/20), y);\r\n                }\r\n            }\r\n\r\n            // MUSIC RECT\r\n            g2.setColor(Color.black);\r\n            g2.drawRect((gameH.myGUI.frame.getWidth()/4), ((y)+(gameH.myGUI.frame.getHeight()/60)), (gameH.myGUI.frame.getWidth()/2), (gameH.myGUI.frame.getHeight()/8));\r\n            g2.setColor(Color.white);\r\n            g2.fillRect((gameH.myGUI.frame.getWidth()/4), ((y)+(gameH.myGUI.frame.getHeight()/60)), ((int) (gameH.musicVolume*10) * ((gameH.myGUI.frame.getWidth()/2)/2)/10), (gameH.myGUI.frame.getHeight()/8));\r\n            // 0.1 = 5\r\n\r\n            y += getYforText(text) + (gameH.myGUI.frame.getHeight()/60) + (gameH.myGUI.frame.getHeight()/8);\r\n            text = \"Sound Volume:\";\r\n            textPos = 1;\r\n            x = getXforCenteredText(text);\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == textPos) {\r\n                g2.drawString(\"<\", x - (gameH.myGUI.frame.getWidth()/15), y);\r\n                if (gameH.fullscreen) {\r\n                    g2.drawString(\">\", x + (gameH.myGUI.frame.getWidth()/4) + (gameH.myGUI.frame.getWidth()/12), y);\r\n                } else {\r\n                    g2.drawString(\">\", x + (gameH.myGUI.frame.getWidth()/4) + (gameH.myGUI.frame.getWidth()/20), y);\r\n                }\r\n            }\r\n\r\n            // SOUND RECT\r\n            g2.setColor(Color.black);\r\n            g2.drawRect((gameH.myGUI.frame.getWidth()/4), ((y)+(gameH.myGUI.frame.getHeight()/60)), (gameH.myGUI.frame.getWidth()/2), (gameH.myGUI.frame.getHeight()/8));\r\n            g2.setColor(Color.white);\r\n            g2.fillRect((gameH.myGUI.frame.getWidth()/4), ((y)+(gameH.myGUI.frame.getHeight()/60)), ((int) (gameH.soundVolume*10) * ((gameH.myGUI.frame.getWidth()/2)/2)/10), (gameH.myGUI.frame.getHeight()/8));\r\n\r\n            y += getYforText(text) + (gameH.myGUI.frame.getHeight()/60) + (gameH.myGUI.frame.getHeight()/8);\r\n            text = \"BACK\";\r\n            textPos = 2;\r\n            x = getXforCenteredText(text);\r\n            g2.drawString(text, x, y);\r\n            if(commandNum == textPos) {\r\n                g2.drawString(\">\", x-gameH.tileSize, y);\r\n            }\r\n        }\r\n    }\r\n    public void drawDialogueScreen() {\r\n\r\n        // WINDOW\r\n        int x = gameH.tileSize*2;\r\n        int y = gameH.tileSize/2;\r\n        int width = gameH.screenWidth - (gameH.tileSize*4);\r\n        int height = gameH.tileSize*4;\r\n\r\n        drawSubWindow(x, y, width, height);\r\n\r\n        g2.setFont(g2.getFont().deriveFont(Font.PLAIN,23F));\r\n        x += gameH.tileSize;\r\n        y += gameH.tileSize;\r\n\r\n        for(String line : currentDialogue.split(\"\\n\")) {\r\n            g2.drawString(line, x, y);\r\n            y += 40;\r\n        }\r\n\r\n\r\n\r\n    }\r\n    public void drawSubWindow(int x, int y, int width, int height) {\r\n\r\n        Color c = new Color(0, 0, 0, 210);\r\n        g2.setColor(c);\r\n        g2.fillRoundRect(x, y, width, height, 35, 35);\r\n\r\n        c = new Color(255, 255, 255);\r\n        g2.setColor(c);\r\n        g2.setStroke(new BasicStroke(5));\r\n        g2.drawRoundRect(x+5, y+5, width-10, height-10, 25, 25);\r\n\r\n    }\r\n    public void drawSaveScreen() {\r\n        g2.setColor(backgroundColor);\r\n        g2.fillRect(0, 0, gameH.myGUI.frame.getWidth(), gameH.myGUI.frame.getHeight());\r\n\r\n        String text;\r\n        int x = 0;\r\n        int y = 0;\r\n\r\n        // set Color\r\n        g2.setColor(Color.white);\r\n\r\n        g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 100F));\r\n        text = \"SAVE SELECT\";\r\n        x = getXforCenteredText(text);\r\n        y = gameH.myGUI.frame.getHeight()/5;\r\n\r\n        g2.drawString(text, x, y);\r\n\r\n        // MENU\r\n        int texts = 4;\r\n        double fontValue = ((gameH.myGUI.frame.getHeight() / 2)-((texts+1)*(gameH.myGUI.frame.getHeight()/25)))/texts; // How big the Font is compared to the Screen\r\n        float fontSize = Float.parseFloat(String.valueOf(fontValue));\r\n        g2.setFont(g2.getFont().deriveFont(Font.BOLD, fontSize));\r\n        text = gameH.fileIndex[0].toUpperCase();\r\n        textPos = 0;\r\n        x = getXforCenteredText(text);\r\n        y = gameH.myGUI.frame.getHeight()/2 + gameH.myGUI.frame.getHeight()/25; // middle of the Screen\r\n        if (gameH.save == gameH.fileIndex[0]) {\r\n            g2.setColor(Color.green);\r\n        } else {\r\n            g2.setColor(Color.white);\r\n        }\r\n        g2.drawString(text, x, y);\r\n        g2.setColor(Color.white);\r\n        if(commandNum == textPos) {\r\n            g2.drawString(\">\", x-gameH.tileSize, y);\r\n        }\r\n\r\n        y += getYforText(text) + (gameH.myGUI.frame.getHeight()/60);\r\n        text = gameH.fileIndex[1].toUpperCase();\r\n        textPos = 1;\r\n        x = getXforCenteredText(text);\r\n        if (gameH.save == gameH.fileIndex[1]) {\r\n            g2.setColor(Color.green);\r\n        } else {\r\n            g2.setColor(Color.white);\r\n        }\r\n        g2.drawString(text, x, y);\r\n        g2.setColor(Color.white);\r\n        if(commandNum == textPos) {\r\n            g2.drawString(\">\", x-gameH.tileSize, y);\r\n        }\r\n\r\n        y += getYforText(text) + (gameH.myGUI.frame.getHeight()/60);\r\n        text = gameH.fileIndex[2].toUpperCase();\r\n        textPos = 2;\r\n        x = getXforCenteredText(text);\r\n        if (gameH.save == gameH.fileIndex[2]) {\r\n            g2.setColor(Color.green);\r\n        } else {\r\n            g2.setColor(Color.white);\r\n        }\r\n        g2.drawString(text, x, y);\r\n        g2.setColor(Color.white);\r\n        if(commandNum == textPos) {\r\n            g2.drawString(\">\", x-gameH.tileSize, y);\r\n        }\r\n\r\n        y += getYforText(text) + (gameH.myGUI.frame.getHeight()/60);\r\n        if (gameH.unsavedSetting) {\r\n            g2.setColor(Color.red);\r\n            text = \"SAVE AND BACK\";\r\n        } else {\r\n            g2.setColor(Color.white);\r\n            text = \"BACK\";\r\n        }\r\n        textPos = 3;\r\n        x = getXforCenteredText(text);\r\n        g2.drawString(text, x, y);\r\n        g2.setColor(Color.white);\r\n        if(commandNum == textPos) {\r\n            g2.drawString(\">\", (int) (x - fontValue), y);\r\n        }\r\n\r\n    }\r\n    public int getXforCenteredText(String text) {\r\n\r\n        int length = (int)g2.getFontMetrics().getStringBounds(text, g2).getWidth();\r\n        int x = gameH.myGUI.frame.getWidth()/2 - length/2;\r\n\r\n        return x;\r\n\r\n    }\r\n    public int getYforText(String text) {\r\n\r\n        int height = (int)g2.getFontMetrics().getStringBounds(text, g2).getHeight();\r\n\r\n        return height;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/UI.java b/src/main/UI.java
--- a/src/main/UI.java	(revision f1805d0a0f630e0e15422a927f14129c68308192)
+++ b/src/main/UI.java	(date 1681733421567)
@@ -67,6 +67,10 @@
         if (gameH.gameState == gameH.saveState) {
             drawSaveScreen();
         }
+        // BATTLE STATE
+        if(gameH.gameState == gameH.battleState){
+            drawBattleScreen();
+        }
     }
     public void drawTitleScreen() {
 
@@ -472,6 +476,9 @@
             g2.drawString(">", (int) (x - fontValue), y);
         }
 
+    }
+    public void drawBattleScreen(){
+
     }
     public int getXforCenteredText(String text) {
 
Index: .idea/shelf/Uncommitted_changes_before_Update_at_03_04_2023_13_53_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_03_04_2023_13_53_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_03_04_2023_13_53_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_03_04_2023_13_53_[Changes]/shelved.patch	(revision f1805d0a0f630e0e15422a927f14129c68308192)
+++ /dev/null	(revision f1805d0a0f630e0e15422a927f14129c68308192)
@@ -1,126 +0,0 @@
-Index: src/tile/TileManager.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package tile;\r\n\r\nimport main.GameHandler;\r\nimport main.ImageHandler;\r\n\r\nimport java.awt.*;\r\nimport java.io.BufferedReader;\r\nimport java.io.FileReader;\r\n\r\npublic class TileManager {\r\n\r\n    GameHandler gameH;\r\n    public Tile[] tile;\r\n    ImageHandler imageH;\r\n    public int mapTileNum[] [];\r\n\r\n    public TileManager(GameHandler gameH, String map) {\r\n\r\n        System.out.println(map);\r\n\r\n        this.gameH = gameH;\r\n\r\n        tile = new Tile[50];\r\n        imageH = new ImageHandler();\r\n\r\n        mapTileNum = new int [gameH.worldColumns] [gameH.worldRows];\r\n\r\n        getTileImage();\r\n        loadMap(map);\r\n    }\r\n\r\n    public void getTileImage() {\r\n\r\n        // LABEL\r\n        setup(0, \"main\",\"Fabimon_Label\",\"png\",343, 110,false);\r\n\r\n        // empty fill Space to skip\r\n        setup(1, \"tiles\",\"PLACEHOLDER\",\"png\", gameH.tileSize, gameH.tileSize,false);\r\n        setup(2, \"tiles\",\"PLACEHOLDER\",\"png\", gameH.tileSize, gameH.tileSize,false);\r\n        setup(3, \"tiles\",\"PLACEHOLDER\",\"png\", gameH.tileSize, gameH.tileSize,false);\r\n        setup(4, \"tiles\",\"PLACEHOLDER\",\"png\", gameH.tileSize, gameH.tileSize,false);\r\n        setup(5, \"tiles\",\"PLACEHOLDER\",\"png\", gameH.tileSize, gameH.tileSize,false);\r\n        setup(6, \"tiles\",\"PLACEHOLDER\",\"png\", gameH.tileSize, gameH.tileSize,false);\r\n        setup(7, \"tiles\",\"PLACEHOLDER\",\"png\", gameH.tileSize, gameH.tileSize,false);\r\n        setup(8, \"tiles\",\"PLACEHOLDER\",\"png\", gameH.tileSize, gameH.tileSize,false);\r\n        setup(9, \"tiles\",\"PLACEHOLDER\",\"png\", gameH.tileSize, gameH.tileSize,false);\r\n        // PLACEHOLDER\r\n\r\n        setup(10, \"tiles\",\"grass\",\"png\", gameH.tileSize, gameH.tileSize,false);\r\n        setup(11, \"tiles\",\"gravel\",\"png\", gameH.tileSize, gameH.tileSize,false);\r\n        setup(12, \"tiles\",\"grass_flowers\",\"png\", gameH.tileSize, gameH.tileSize,true);\r\n        setup(13, \"tiles\",\"water\",\"png\", gameH.tileSize, gameH.tileSize,true);\r\n        setup(14, \"tiles\",\"sand\",\"png\", gameH.tileSize, gameH.tileSize,true);\r\n\r\n    }\r\n\r\n    public void setup(int index, String imageLocation, String imageName, String imageDataTyp, int refactoredWidth, int refactoredHeight, boolean collision) {\r\n\r\n        tile [index] = new Tile();\r\n        imageH.ImageInitializer(index, imageLocation, imageName, imageDataTyp, refactoredWidth, refactoredHeight);\r\n        tile [index].image = imageH.image[index];\r\n        tile [index].collision = collision;\r\n\r\n    }\r\n\r\n    public void loadMap (String fileName) {\r\n\r\n        try {\r\n\r\n            // https://www.geeksforgeeks.org/java-io-bufferedreader-class-java/\r\n\r\n            String fileLocation = \"res/maps/\" + fileName + \".txt\";\r\n\r\n            FileReader fr = new FileReader(fileLocation);\r\n            BufferedReader br = new BufferedReader(fr);\r\n            //InputStream mapFile = getClass().getResourceAsStream(fileLocation);\r\n\r\n            System.out.println(\"mapfile: \" + fileLocation);\r\n\r\n            int col = 0;\r\n            int row = 0;\r\n\r\n            while(col < gameH.worldColumns && row < gameH.worldRows) {\r\n\r\n                String line = br.readLine();\r\n\r\n                while(col < gameH.worldColumns) {\r\n\r\n                    String numbers[] = line.split(\" \");\r\n\r\n                    int num = Integer.parseInt(numbers[col]);\r\n\r\n                    mapTileNum[col][row] = num;\r\n                    col++;\r\n                }\r\n                if(col == gameH.worldColumns) {\r\n                    col = 0;\r\n                    row++;\r\n                }\r\n            }\r\n\r\n            br.close();\r\n\r\n        }catch(Exception e) {\r\n            System.out.println(\"Error: \" + e);\r\n        }\r\n\r\n    }\r\n\r\n    public void draw(Graphics2D g2) {\r\n\r\n        int worldCol = 0;\r\n        int worldRow = 0;\r\n\r\n        while(worldCol < gameH.worldColumns && worldRow < gameH.worldRows) {\r\n\r\n            int tileNum = mapTileNum[worldCol][worldRow];\r\n\r\n            int worldX = worldCol * gameH.tileSize;\r\n            int worldY = worldRow * gameH.tileSize;\r\n            int screenX = worldX - gameH.player.worldX + gameH.player.screenX;\r\n            int screenY = worldY - gameH.player.worldY + gameH.player.screenY;\r\n\r\n            //(worldX + gameH.tileSize > gameH.player.worldX - gameH.player.screenX &&\r\n            //                    worldX - gameH.tileSize < gameH.player.worldX + gameH.player.screenX &&\r\n            //                    worldY + gameH.tileSize > gameH.player.worldY - gameH.player.screenY &&\r\n            //                    worldY - gameH.tileSize < gameH.player.worldY + gameH.player.screenY)\r\n\r\n            if (true) {\r\n\r\n                g2.drawImage(tile[tileNum].image, screenX, screenY, null);\r\n\r\n            }\r\n\r\n\r\n            worldCol++;\r\n\r\n            if(worldCol == gameH.worldColumns) {\r\n\r\n                worldCol = 0;\r\n                worldRow++;\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/tile/TileManager.java b/src/tile/TileManager.java
---- a/src/tile/TileManager.java	(revision e81671940ff78d342d5047791375cfe73c17bcd7)
-+++ b/src/tile/TileManager.java	(date 1679922318672)
-@@ -121,12 +121,12 @@
-             int screenX = worldX - gameH.player.worldX + gameH.player.screenX;
-             int screenY = worldY - gameH.player.worldY + gameH.player.screenY;
- 
--            //(worldX + gameH.tileSize > gameH.player.worldX - gameH.player.screenX &&
--            //                    worldX - gameH.tileSize < gameH.player.worldX + gameH.player.screenX &&
--            //                    worldY + gameH.tileSize > gameH.player.worldY - gameH.player.screenY &&
--            //                    worldY - gameH.tileSize < gameH.player.worldY + gameH.player.screenY)
-+            if(worldX + gameH.tileSize > gameH.player.worldX - gameH.player.screenX &&
-+                                worldX - gameH.tileSize < gameH.player.worldX + gameH.player.screenX &&
-+                                worldY + gameH.tileSize > gameH.player.worldY - gameH.player.screenY &&
-+                                worldY - gameH.tileSize < gameH.player.worldY + gameH.player.screenY)
- 
--            if (true) {
-+            {
- 
-                 g2.drawImage(tile[tileNum].image, screenX, screenY, null);
- 
-Index: src/entity/Player.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package entity;\r\n\r\n\r\nimport main.GameHandler;\r\nimport main.ImageHandler;\r\nimport main.control.KeyHandler;\r\n\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\n\r\npublic class Player extends Entity{\r\n\r\n    KeyHandler keyH;\r\n    ImageHandler imageH = new ImageHandler();\r\n\r\n    public int screenX;\r\n    public int screenY;\r\n    int standCounter = 0;\r\n    // DEBUG\r\n    public boolean speedBoost;\r\n\r\n    public Player(GameHandler gameH, KeyHandler keyH) {\r\n\r\n        super(gameH);\r\n        this.keyH = keyH;\r\n\r\n        screenX = gameH.screenWidth/2 - (gameH.tileSize/2);\r\n        screenY = gameH.screenHeight/3 - (gameH.tileSize/2);\r\n\r\n        solidArea = new Rectangle();\r\n        solidArea.x = gameH.tileSize/2;\r\n        solidArea.y = gameH.tileSize/2;\r\n        solidAreaDefaultX = solidArea.x;\r\n        solidAreaDefaultY = solidArea.y;\r\n        solidArea.width = gameH.tileSize/3; // hitbox width\r\n        solidArea.height = gameH.tileSize/3; // hitbox height\r\n\r\n        setDefaultValues();\r\n        getPlayerImage();\r\n    }\r\n    public void setDefaultValues () {\r\n\r\n        worldX = gameH.playerPosX;\r\n        worldY = gameH.playerPosY;\r\n        speed = 4;\r\n        direction = \"down\";\r\n\r\n    }\r\n\r\n    public void getPlayerImage() {\r\n\r\n        imageH.ImageInitializer(0,\"player\",\"Skully_up_1\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        up1 = imageH.image[0];\r\n        imageH.ImageInitializer(1,\"player\",\"Skully_up_2\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        up2 = imageH.image[1];\r\n        imageH.ImageInitializer(2,\"player\",\"Skully_down_1\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        down1 = imageH.image[2];\r\n        imageH.ImageInitializer(3,\"player\",\"Skully_down_2\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        down2 = imageH.image[3];\r\n        imageH.ImageInitializer(4,\"player\",\"Skully_left_1\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        left1 = imageH.image[4];\r\n        imageH.ImageInitializer(5,\"player\",\"Skully_left_2\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        left2 = imageH.image[5];\r\n        imageH.ImageInitializer(6,\"player\",\"Skully_right_1\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        right1 = imageH.image[6];\r\n        imageH.ImageInitializer(7,\"player\",\"Skully_right_2\",\"png\", gameH.tileSize, gameH.tileSize);\r\n        right2 = imageH.image[7];\r\n\r\n    }\r\n\r\n    public void update() {\r\n\r\n        if(keyH.wPressed == true || keyH.sPressed == true || keyH.aPressed == true || keyH.dPressed == true) {\r\n\r\n            if(keyH.wPressed == true) {\r\n                direction = \"up\";\r\n\r\n//\t\t\t\tplayerY = playerY - playerSpeed;\r\n            } else if(keyH.sPressed == true) {\r\n                direction = \"down\";\r\n\r\n            } else if(keyH.aPressed == true) {\r\n                direction = \"left\";\r\n\r\n            } else if(keyH.dPressed == true) {\r\n                direction = \"right\";\r\n\r\n            }\r\n\r\n            // CHECK TILE COLLISION\r\n            collisionOn = false;\r\n            gameH.cChecker.checkTile(this);\r\n\r\n            // CHECK OBJECT COLLISION\r\n            int objIndex = gameH.cChecker.checkObject(this, true);\r\n            pickUpObject(objIndex);\r\n\r\n            // CHECK NPC COLLISION\r\n            int npcIndex = gameH.cChecker.checkEntity(this, gameH.npc);\r\n            interactNPC(npcIndex);\r\n\r\n\r\n            // CHECK EVENT\r\n            gameH.eHandler.checkEvent();\r\n\r\n            gameH.keyH.spacePressed = false;\r\n\r\n            // IF COLLISION IS FALSE, PLAYER CAN MOVE\r\n            if(collisionOn == false) {\r\n\r\n                switch(direction) {\r\n                    case \"up\":\r\n                        worldY -= speed;\r\n                        break;\r\n                    case \"down\":\r\n                        worldY += speed;\r\n                        break;\r\n                    case \"left\":\r\n                        worldX -= speed;\r\n                        break;\r\n                    case \"right\":\r\n                        worldX += speed;\r\n                        break;\r\n                }\r\n\r\n            }\r\n\r\n            spriteCounter++;\r\n            if (spriteCounter > 10) {\r\n                if (spriteNum == 1) {\r\n                    spriteNum = 2;\r\n                } else if (spriteNum == 2) {\r\n                    spriteNum = 1;\r\n                }\r\n                spriteCounter = 0;\r\n            }\r\n\r\n        } else {\r\n            standCounter++;\r\n            if(standCounter == 20) {\r\n                spriteNum = 1;\r\n                standCounter = 0;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public void pickUpObject(int i) {\r\n\r\n        if(i != 999) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public void interactNPC(int i) {\r\n\r\n        if(i != 999) {\r\n\r\n            // NPC code\r\n            // ...\r\n\r\n        }\r\n    }\r\n\r\n    public void draw(Graphics2D g2) {\r\n\r\n        BufferedImage image = null;\r\n\r\n        switch (direction) {\r\n            case \"up\":\r\n                if(spriteNum == 1) {\r\n                    image = up1;\r\n                }\r\n                if(spriteNum == 2) {\r\n                    image = up2;\r\n                }\r\n                break;\r\n            case \"down\":\r\n                if(spriteNum == 1) {\r\n                    image = down1;\r\n                }\r\n                if(spriteNum == 2) {\r\n                    image = down2;\r\n                }\r\n                break;\r\n            case \"left\":\r\n                if(spriteNum == 1) {\r\n                    image = left1;\r\n                }\r\n                if(spriteNum == 2) {\r\n                    image = left2;\r\n                }\r\n                break;\r\n            case \"right\":\r\n                if(spriteNum == 1) {\r\n                    image = right1;\r\n                }\r\n                if(spriteNum == 2) {\r\n                    image = right2;\r\n                }\r\n                break;\r\n        }\r\n\r\n        g2.drawImage(image, screenX, screenY, null);\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/entity/Player.java b/src/entity/Player.java
---- a/src/entity/Player.java	(revision e81671940ff78d342d5047791375cfe73c17bcd7)
-+++ b/src/entity/Player.java	(date 1679922306435)
-@@ -25,7 +25,7 @@
-         this.keyH = keyH;
- 
-         screenX = gameH.screenWidth/2 - (gameH.tileSize/2);
--        screenY = gameH.screenHeight/3 - (gameH.tileSize/2);
-+        screenY = gameH.screenHeight/3 + (gameH.tileSize/2);
- 
-         solidArea = new Rectangle();
-         solidArea.x = gameH.tileSize/2;
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"db0494c6-0a68-42cf-972d-c5e59f1f09f2\" name=\"Changes\" comment=\"V0.9.3.4\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/entity/Player.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/entity/Player.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/EventHandler.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/EventHandler.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/GameHandler.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/GameHandler.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/control/KeyHandler.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/control/KeyHandler.java\" afterDir=\"false\" />\r\n    </list>\r\n    <list id=\"6b9de9cb-74b3-4289-a992-6da309b33e84\" name=\"Changes by arrowe\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\r\n      <list>\r\n        <option value=\"Kennatris &lt;tino.st.2004@gmail.com&gt;\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"SIGN_OFF_COMMIT\" value=\"true\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/src/entity/Player.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2N44a8rHPu6qGkwy9tfta4bpKJu\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Downloaded.Files.Path.Enabled\": \"false\",\r\n    \"Repository.Attach.Annotations\": \"false\",\r\n    \"Repository.Attach.JavaDocs\": \"false\",\r\n    \"Repository.Attach.Sources\": \"false\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"last_opened_file_path\": \"C:/Users/tinos/Downloads/jinput-platform-2.0.7-natives-windows.jar\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"project.structure.last.edited\": \"Libraries\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\tinos\\IdeaProjects\\Fabimon_Project\\res\\saves\" />\r\n      <recent name=\"C:\\Users\\tinos\\IdeaProjects\\Fabimon_Project\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\tinos\\IdeaProjects\\Fabimon_Project\\res\\objects\" />\r\n      <recent name=\"C:\\Users\\tinos\\IdeaProjects\\Fabimon_Project\\res\\maps\" />\r\n      <recent name=\"C:\\Users\\tinos\\IdeaProjects\\Fabimon_Project\\res\\tiles\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"main.Main\" />\r\n      <module name=\"Fabimon\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"db0494c6-0a68-42cf-972d-c5e59f1f09f2\" name=\"Changes\" comment=\"\" />\r\n      <created>1678910081166</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1678910081166</updated>\r\n      <workItem from=\"1678910082575\" duration=\"1455000\" />\r\n      <workItem from=\"1679553934541\" duration=\"2696000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"V0.9.1&#10;&#10;// großes Update, vollständige Überarbeitung des Kerns&#10;// auslassung der Kontroller aufgrund von Fehlern&#10;// veraltete Verson von der Klasse &quot;Stats&quot;\">\r\n      <created>1679533924557</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679533924557</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"V0.9.2&#10;&#10;// HAPPY TINO NOISES&#10;// IT'S ALIVE\">\r\n      <created>1679565303215</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679565303215</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"V0.9.2&#10;&#10;// HAPPY TINO NOISES&#10;// IT'S ALIVE\">\r\n      <created>1679641953910</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679641953910</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"V0.9.2\">\r\n      <created>1679643336170</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679643336170</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"V0.9.3.1\">\r\n      <created>1679654032330</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679654032330</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"V0.9.3.1\">\r\n      <created>1679654075507</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679654075507</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"V0.9.3.1\">\r\n      <created>1679831521030</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679831521030</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"V0.9.3.2\">\r\n      <created>1679832273831</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679832273831</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"V0.9.3.3\">\r\n      <created>1679834208825</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679834208825</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"V0.9.3.3\">\r\n      <created>1679834262914</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679834262914</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"V0.9.3.4\">\r\n      <created>1679911161669</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679911161669</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"12\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"user\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"*\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_FILTERS\">\r\n      <map>\r\n        <entry key=\"User\">\r\n          <value>\r\n            <list>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"*\" />\r\n                </option>\r\n              </RecentGroup>\r\n            </list>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"V0.1\" />\r\n    <MESSAGE value=\"V0.9.1&#10;&#10;// großes Update, vollständige Überarbeitung des Kerns&#10;// auslassung der Kontroller aufgrund von Fehlern&#10;// veraltete Verson von der Klasse &quot;Stats&quot;\" />\r\n    <MESSAGE value=\"V0.9.2&#10;&#10;// HAPPY TINO NOISES&#10;// IT'S ALIVE\" />\r\n    <MESSAGE value=\"V0.9.2\" />\r\n    <MESSAGE value=\"V0.9.3\" />\r\n    <MESSAGE value=\"V0.9.3.1\" />\r\n    <MESSAGE value=\"V0.9.3.2\" />\r\n    <MESSAGE value=\"V0.9.3.3\" />\r\n    <MESSAGE value=\"V0.9.3.4\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"V0.9.3.4\" />\r\n    <option name=\"OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT\" value=\"true\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision e81671940ff78d342d5047791375cfe73c17bcd7)
-+++ b/.idea/workspace.xml	(date 1680162789797)
-@@ -5,11 +5,10 @@
-   </component>
-   <component name="ChangeListManager">
-     <list default="true" id="db0494c6-0a68-42cf-972d-c5e59f1f09f2" name="Changes" comment="V0.9.3.4">
-+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15_03_2023_22_27__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15_03_2023_22_27__Changes_.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/src/entity/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/entity/Player.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/EventHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/EventHandler.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/GameHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/GameHandler.java" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/src/main/control/KeyHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/control/KeyHandler.java" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/src/tile/TileManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/tile/TileManager.java" afterDir="false" />
-     </list>
-     <list id="6b9de9cb-74b3-4289-a992-6da309b33e84" name="Changes by arrowe" comment="" />
-     <option name="SHOW_DIALOG" value="false" />
-@@ -47,26 +46,26 @@
-     <option name="hideEmptyMiddlePackages" value="true" />
-     <option name="showLibraryContents" value="true" />
-   </component>
--  <component name="PropertiesComponent"><![CDATA[{
--  "keyToString": {
--    "Downloaded.Files.Path.Enabled": "false",
--    "Repository.Attach.Annotations": "false",
--    "Repository.Attach.JavaDocs": "false",
--    "Repository.Attach.Sources": "false",
--    "RunOnceActivity.OpenProjectViewOnStart": "true",
--    "RunOnceActivity.ShowReadmeOnStart": "true",
--    "WebServerToolWindowFactoryState": "false",
--    "last_opened_file_path": "C:/Users/tinos/Downloads/jinput-platform-2.0.7-natives-windows.jar",
--    "node.js.detected.package.eslint": "true",
--    "node.js.detected.package.tslint": "true",
--    "node.js.selected.package.eslint": "(autodetect)",
--    "node.js.selected.package.tslint": "(autodetect)",
--    "project.structure.last.edited": "Libraries",
--    "project.structure.proportion": "0.15",
--    "project.structure.side.proportion": "0.2",
--    "vue.rearranger.settings.migration": "true"
-+  <component name="PropertiesComponent">{
-+  &quot;keyToString&quot;: {
-+    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
-+    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
-+    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
-+    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
-+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-+    &quot;last_opened_file_path&quot;: &quot;C:/Users/tinos/Downloads/jinput-platform-2.0.7-natives-windows.jar&quot;,
-+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-+    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,
-+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
-+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
-+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
-   }
--}]]></component>
-+}</component>
-   <component name="RecentsManager">
-     <key name="CopyFile.RECENT_KEYS">
-       <recent name="C:\Users\tinos\IdeaProjects\Fabimon_Project\res\saves" />
-@@ -97,6 +96,8 @@
-       <updated>1678910081166</updated>
-       <workItem from="1678910082575" duration="1455000" />
-       <workItem from="1679553934541" duration="2696000" />
-+      <workItem from="1679917636172" duration="3932000" />
-+      <workItem from="1680070041407" duration="5713000" />
-     </task>
-     <task id="LOCAL-00001" summary="V0.9.1&#10;&#10;// großes Update, vollständige Überarbeitung des Kerns&#10;// auslassung der Kontroller aufgrund von Fehlern&#10;// veraltete Verson von der Klasse &quot;Stats&quot;">
-       <created>1679533924557</created>
Index: .idea/shelf/Uncommitted_changes_before_Update_at_03_04_2023_13_53__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_03_04_2023_13_53__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_03_04_2023_13_53__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_03_04_2023_13_53__Changes_.xml	(revision f1805d0a0f630e0e15422a927f14129c68308192)
+++ /dev/null	(revision f1805d0a0f630e0e15422a927f14129c68308192)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_03_04_2023_13_53_[Changes]" date="1680522832321" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_04_2023_13_53_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 03.04.2023 13:53 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"db0494c6-0a68-42cf-972d-c5e59f1f09f2\" name=\"Changes\" comment=\"V0.9.3.4\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/entity/NPCTest.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15_03_2023_22_27__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15_03_2023_22_27__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/res/saves/save_one.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/res/saves/save_one.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/entity/Entity.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/entity/Entity.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/entity/Player.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/entity/Player.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/AssetSetter.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/AssetSetter.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/GameHandler.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/GameHandler.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/control/KeyHandler.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/control/KeyHandler.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/tile/TileManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/tile/TileManager.java\" afterDir=\"false\" />\r\n    </list>\r\n    <list id=\"6b9de9cb-74b3-4289-a992-6da309b33e84\" name=\"Changes by arrowe\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <favorite-branches>\r\n      <branch-storage>\r\n        <map>\r\n          <entry type=\"REMOTE\">\r\n            <value>\r\n              <list>\r\n                <branch-info repo=\"$PROJECT_DIR$\" source=\"origin/PhilippKamerlocher\" />\r\n              </list>\r\n            </value>\r\n          </entry>\r\n        </map>\r\n      </branch-storage>\r\n    </favorite-branches>\r\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\r\n      <list>\r\n        <option value=\"Kennatris &lt;tino.st.2004@gmail.com&gt;\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"SIGN_OFF_COMMIT\" value=\"true\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\"><![CDATA[{\r\n  \"lastFilter\": {\r\n    \"state\": \"OPEN\"\r\n  }\r\n}]]></component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"7e38db0f-0053-44f5-a01a-e91110a8578b\" />\r\n        <option name=\"url\" value=\"https://github.com/Kennatris/Fabimon_Project.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/src/entity/Player.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2N44a8rHPu6qGkwy9tfta4bpKJu\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/tinos/Downloads/jinput-platform-2.0.7-natives-windows.jar&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\tinos\\IdeaProjects\\Fabimon_Project\\res\\saves\" />\r\n      <recent name=\"C:\\Users\\tinos\\IdeaProjects\\Fabimon_Project\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\tinos\\IdeaProjects\\Fabimon_Project\\res\\objects\" />\r\n      <recent name=\"C:\\Users\\tinos\\IdeaProjects\\Fabimon_Project\\res\\maps\" />\r\n      <recent name=\"C:\\Users\\tinos\\IdeaProjects\\Fabimon_Project\\res\\tiles\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"main.Main\" />\r\n      <module name=\"Fabimon\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"db0494c6-0a68-42cf-972d-c5e59f1f09f2\" name=\"Changes\" comment=\"\" />\r\n      <created>1678910081166</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1678910081166</updated>\r\n      <workItem from=\"1678910082575\" duration=\"1455000\" />\r\n      <workItem from=\"1679553934541\" duration=\"2696000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"V0.9.1&#10;&#10;// großes Update, vollständige Überarbeitung des Kerns&#10;// auslassung der Kontroller aufgrund von Fehlern&#10;// veraltete Verson von der Klasse &quot;Stats&quot;\">\r\n      <created>1679533924557</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679533924557</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"V0.9.2&#10;&#10;// HAPPY TINO NOISES&#10;// IT'S ALIVE\">\r\n      <created>1679565303215</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679565303215</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"V0.9.2&#10;&#10;// HAPPY TINO NOISES&#10;// IT'S ALIVE\">\r\n      <created>1679641953910</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679641953910</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"V0.9.2\">\r\n      <created>1679643336170</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679643336170</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"V0.9.3.1\">\r\n      <created>1679654032330</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679654032330</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"V0.9.3.1\">\r\n      <created>1679654075507</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679654075507</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"V0.9.3.1\">\r\n      <created>1679831521030</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679831521030</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"V0.9.3.2\">\r\n      <created>1679832273831</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679832273831</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"V0.9.3.3\">\r\n      <created>1679834208825</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679834208825</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"V0.9.3.3\">\r\n      <created>1679834262914</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679834262914</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"V0.9.3.4\">\r\n      <created>1679911161669</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679911161669</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"12\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.History.Properties\">\r\n    <option name=\"SHOW_OTHER_BRANCHES\" value=\"true\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"user\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"*\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_FILTERS\">\r\n      <map>\r\n        <entry key=\"User\">\r\n          <value>\r\n            <list>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"*\" />\r\n                </option>\r\n              </RecentGroup>\r\n            </list>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"V0.1\" />\r\n    <MESSAGE value=\"V0.9.1&#10;&#10;// großes Update, vollständige Überarbeitung des Kerns&#10;// auslassung der Kontroller aufgrund von Fehlern&#10;// veraltete Verson von der Klasse &quot;Stats&quot;\" />\r\n    <MESSAGE value=\"V0.9.2&#10;&#10;// HAPPY TINO NOISES&#10;// IT'S ALIVE\" />\r\n    <MESSAGE value=\"V0.9.2\" />\r\n    <MESSAGE value=\"V0.9.3\" />\r\n    <MESSAGE value=\"V0.9.3.1\" />\r\n    <MESSAGE value=\"V0.9.3.2\" />\r\n    <MESSAGE value=\"V0.9.3.3\" />\r\n    <MESSAGE value=\"V0.9.3.4\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"V0.9.3.4\" />\r\n    <option name=\"OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT\" value=\"true\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f1805d0a0f630e0e15422a927f14129c68308192)
+++ b/.idea/workspace.xml	(date 1681895996924)
@@ -4,17 +4,15 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="db0494c6-0a68-42cf-972d-c5e59f1f09f2" name="Changes" comment="V0.9.3.4">
-      <change afterPath="$PROJECT_DIR$/src/entity/NPCTest.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15_03_2023_22_27__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_15_03_2023_22_27__Changes_.xml" afterDir="false" />
+    <list default="true" id="db0494c6-0a68-42cf-972d-c5e59f1f09f2" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_04_2023_13_53_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_04_2023_13_53__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/res/saves/save_one.txt" beforeDir="false" afterPath="$PROJECT_DIR$/res/saves/save_one.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/entity/Entity.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/entity/Entity.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/entity/NPCTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/entity/NPCTest.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/entity/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/entity/Player.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/AssetSetter.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/AssetSetter.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/CollisionChecker.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/CollisionChecker.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/GameHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/GameHandler.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/control/KeyHandler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/control/KeyHandler.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/tile/TileManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/tile/TileManager.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/UI.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/UI.java" afterDir="false" />
     </list>
     <list id="6b9de9cb-74b3-4289-a992-6da309b33e84" name="Changes by arrowe" comment="" />
     <option name="SHOW_DIALOG" value="false" />
@@ -47,15 +45,21 @@
       <list>
         <option value="Kennatris &lt;tino.st.2004@gmail.com&gt;" />
       </list>
+    </option>
+    <option name="PUSH_TAGS">
+      <GitPushTagMode>
+        <option name="argument" value="--tags" />
+        <option name="title" value="All" />
+      </GitPushTagMode>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
     <option name="SIGN_OFF_COMMIT" value="true" />
   </component>
-  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
-  "lastFilter": {
-    "state": "OPEN"
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {
+    &quot;state&quot;: &quot;OPEN&quot;
   }
-}]]></component>
+}</component>
   <component name="GithubPullRequestsUISettings">
     <option name="selectedUrlAndAccountId">
       <UrlAndAccount>
@@ -128,6 +132,13 @@
       <updated>1678910081166</updated>
       <workItem from="1678910082575" duration="1455000" />
       <workItem from="1679553934541" duration="2696000" />
+      <workItem from="1680597526409" duration="75000" />
+      <workItem from="1681711627320" duration="708000" />
+      <workItem from="1681718294469" duration="575000" />
+      <workItem from="1681719074801" duration="5000" />
+      <workItem from="1681719561497" duration="162000" />
+      <workItem from="1681732285717" duration="4961000" />
+      <workItem from="1681888352262" duration="1837000" />
     </task>
     <task id="LOCAL-00001" summary="V0.9.1&#10;&#10;// großes Update, vollständige Überarbeitung des Kerns&#10;// auslassung der Kontroller aufgrund von Fehlern&#10;// veraltete Verson von der Klasse &quot;Stats&quot;">
       <created>1679533924557</created>
@@ -206,7 +217,21 @@
       <option name="project" value="LOCAL" />
       <updated>1679911161669</updated>
     </task>
-    <option name="localTasksCounter" value="12" />
+    <task id="LOCAL-00012" summary="V0.9.3.4">
+      <created>1680596685590</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1680596685590</updated>
+    </task>
+    <task id="LOCAL-00013" summary="V0.9.3.4">
+      <created>1680596884212</created>
+      <option name="number" value="00013" />
+      <option name="presentableId" value="LOCAL-00013" />
+      <option name="project" value="LOCAL" />
+      <updated>1680596884212</updated>
+    </task>
+    <option name="localTasksCounter" value="14" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
